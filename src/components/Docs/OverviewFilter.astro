<style is:global>
	aside button {
		display: inline-flex;
		width: fit-content;
		color: inherit;
		border: 1px solid #2224;
		opacity: 0.6;
		margin: 3px;
		padding: 2px 6px;
		border-radius: 8px;
		font-size: smaller;
		cursor: pointer;
		filter: grayscale(1);
	}

	aside button:hover {
		opacity: 0.7;
	}

	aside button.on {
		opacity: 1;
		filter: grayscale(0);
	}

	.content section.hide[id] {
		display: none;
	}
</style>

<script>
	const aside = document.getElementById("overview-filter")!
	const blocks = document.querySelectorAll(".content > section[id]")
	let content = document.querySelector(".content")

	blocks.forEach((block) => {
		const button = document.createElement("button")

		button.textContent = block.querySelector("h2")?.textContent ?? ""
		button.dataset.for = block.id

		button.addEventListener("click", function () {
			const btns = Object.values(document.querySelectorAll<HTMLElement>("aside button"))
			const id = this.dataset.for ?? ""

			btns.forEach((btn) => {
				if (btn.dataset.for === id) {
					btn.classList.toggle("on")
				} else {
					btn.classList.remove("on")
				}
			})

			let enabled = false
			blocks.forEach((block) => {
				if (document.querySelectorAll("aside button.on").length === 0) {
					blocks.forEach((block) => block.classList.remove("hide"))
				} else {
					block.classList.toggle("hide", block.id !== id)
					enabled = true
				}
			})

			content?.classList.toggle("single_overview", enabled)
		})

		aside.appendChild(button)
	})

	content?.prepend(aside as any)
</script>

<style>
	aside {
		margin-top: 2em;
	}

	aside button {
		display: inline;
		width: fit-content;
		color: inherit;
		border: 1px solid #2224;
		opacity: 0.3;
		margin: 3px;
		padding: 2px 6px;
		border-radius: 8px;
		cursor: pointer;
	}

	aside button:hover {
		opacity: 0.6;
	}

	aside button.on {
		opacity: 1;
	}

	.content section.hide[id] {
		display: none;
	}
</style>

<aside id="overview-filter"></aside>
